# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [release]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install yarn
        run: |
          npm install -g yarn
          yarn
      - name: Cache
        id: cache-nodemodules
        uses: actions/cache@v2.1.4
        with:
          path: node_modules/*
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: yarn
      # - name: set known hosts
      #   env:
      #     SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      #   run: |
      #     mkdir -p ~/.ssh/
      #     echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      - name: Build svelte app
        env:
          VITE_API_URL: ${{ secrets.API_URL }}
          VITE_HOST: ${{ secrets.APP_HOST }}
          VITE_WS_URL: ${{ secrets.WS_URL }}
        run: |
          touch .env
          echo 'VITE_API_URL=${VITE_API_URL}' > .env
          echo 'VITE_HOST=${VITE_HOST}' >> .env
          echo 'VITE_WS_URL=${VITE_WS_URL}' >> .env
          yarn build
      - name: Deploy
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          USERNAME: ${{ secrets.USERNAME }}
          HOST: ${{ secrets.HOST }}
          TARGET_FOLDER: ${{ secrets.TARGET_FOLDER }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${DEPLOY_KEY}"
          ssh-keyscan -t rsa ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          scp -r dist/* $USERNAME@$HOST:$TARGET_FOLDER/
